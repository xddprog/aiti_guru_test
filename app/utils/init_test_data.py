from decimal import Decimal
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from app.infrastructure.database.models.category import Category
from app.infrastructure.database.models.product import Product
from app.infrastructure.database.models.client import Client
from app.infrastructure.database.models.order import Order, OrderItem


async def init_test_data(session: AsyncSession):

    check_categories = await session.execute(select(Category))
    if check_categories.scalars().unique().all():
        return
    
    household_appliances = Category(name="–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞")
    computers = Category(name="–ö–æ–º–ø—å—é—Ç–µ—Ä—ã")
    
    session.add_all([household_appliances, computers])
    await session.flush()
    
    washing_machines = Category(name="–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã", parent_id=household_appliances.id)
    refrigerators = Category(name="–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏", parent_id=household_appliances.id)
    tvs = Category(name="–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã", parent_id=household_appliances.id)
    
    session.add_all([washing_machines, refrigerators, tvs])
    await session.flush()
    
    single_door = Category(name="–æ–¥–Ω–æ–∫–∞–º–µ—Ä–Ω—ã–µ", parent_id=refrigerators.id)
    double_door = Category(name="–¥–≤—É—Ö–∫–∞–º–µ—Ä–Ω—ã–µ", parent_id=refrigerators.id)
    
    laptops = Category(name="–ù–æ—É—Ç–±—É–∫–∏", parent_id=computers.id)
    monoblocks = Category(name="–ú–æ–Ω–æ–±–ª–æ–∫–∏", parent_id=computers.id)
    
    session.add_all([single_door, double_door, laptops, monoblocks])
    await session.flush()
    
    laptop_17 = Category(name='17"', parent_id=laptops.id)
    laptop_19 = Category(name='19"', parent_id=laptops.id)
    
    session.add_all([laptop_17, laptop_19])
    await session.flush()
    
    products = [
        Product(name="–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ Samsung WW70", category_id=washing_machines.id, price=Decimal("45000.00")),
        Product(name="–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ LG F2J6HS0W", category_id=washing_machines.id, price=Decimal("38000.00")),
        
        Product(name="–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ê—Ç–ª–∞–Ω—Ç –•–ú 4012-080", category_id=single_door.id, price=Decimal("25000.00")),
        Product(name="–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ë–∏—Ä—é—Å–∞ 118", category_id=single_door.id, price=Decimal("18000.00")),
        
        Product(name="–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ Samsung RB37", category_id=double_door.id, price=Decimal("55000.00")),
        Product(name="–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ LG GA-B509CQSL", category_id=double_door.id, price=Decimal("48000.00")),
        
        Product(name="–¢–µ–ª–µ–≤–∏–∑–æ—Ä Samsung UE43", category_id=tvs.id, price=Decimal("35000.00")),
        Product(name="–¢–µ–ª–µ–≤–∏–∑–æ—Ä LG 43UP7500", category_id=tvs.id, price=Decimal("32000.00")),
        
        Product(name='–ù–æ—É—Ç–±—É–∫ ASUS VivoBook 17"', category_id=laptop_17.id, price=Decimal("65000.00")),
        Product(name='–ù–æ—É—Ç–±—É–∫ HP Pavilion 17"', category_id=laptop_17.id, price=Decimal("58000.00")),
        
        Product(name='–ù–æ—É—Ç–±—É–∫ Dell Inspiron 19"', category_id=laptop_19.id, price=Decimal("75000.00")),
        Product(name='–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad 19"', category_id=laptop_19.id, price=Decimal("68000.00")),
        
        Product(name="–ú–æ–Ω–æ–±–ª–æ–∫ Apple iMac 24", category_id=monoblocks.id, price=Decimal("120000.00")),
        Product(name="–ú–æ–Ω–æ–±–ª–æ–∫ HP All-in-One 24", category_id=monoblocks.id, price=Decimal("85000.00")),
    ]
    
    session.add_all(products)
    await session.flush()
    
    clients = [
        Client(name="–û–û–û –†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞", address="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 1"),
        Client(name="–ò–ü –ò–≤–∞–Ω–æ–≤ –ò.–ò.", address="–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ø—Ä. –ù–µ–≤—Å–∫–∏–π, –¥. 25"),
        Client(name="–û–û–û –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ë—É–¥—É—â–µ–≥–æ", address="–≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 50"),
        Client(name="–ò–ü –ü–µ—Ç—Ä–æ–≤ –ü.–ü.", address="–≥. –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, —É–ª. –ö—Ä–∞—Å–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥. 100"),
        Client(name="–û–û–û –ú–µ–≥–∞ –ö–æ—Ä–ø", address="–≥. –ö–∞–∑–∞–Ω—å, —É–ª. –ë–∞—É–º–∞–Ω–∞, –¥. 15"),
    ]
    
    session.add_all(clients)
    await session.flush()
    
    order1 = Order(client_id=clients[0].id)
    session.add(order1)
    await session.flush()
    
    order1_items = [
        OrderItem(order_id=order1.id, product_id=products[0].id, quantity=1, price=products[0].price),  
        OrderItem(order_id=order1.id, product_id=products[2].id, quantity=1, price=products[2].price),  
        OrderItem(order_id=order1.id, product_id=products[4].id, quantity=1, price=products[4].price),  
    ]
    
    order2 = Order(client_id=clients[1].id)
    session.add(order2)
    await session.flush()
    
    order2_items = [
        OrderItem(order_id=order2.id, product_id=products[8].id, quantity=1, price=products[8].price),  
        OrderItem(order_id=order2.id, product_id=products[10].id, quantity=1, price=products[10].price), 
    ]
    
    order3 = Order(client_id=clients[2].id)
    session.add(order3)
    await session.flush()
    
    order3_items = [
        OrderItem(order_id=order3.id, product_id=products[6].id, quantity=2, price=products[6].price),  
        OrderItem(order_id=order3.id, product_id=products[12].id, quantity=1, price=products[12].price), 
    ]
    
    order4 = Order(client_id=clients[3].id)
    session.add(order4)
    await session.flush()
    
    order4_items = [
        OrderItem(order_id=order4.id, product_id=products[1].id, quantity=1, price=products[1].price),  # –°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ LG
        OrderItem(order_id=order4.id, product_id=products[3].id, quantity=2, price=products[3].price),  # –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏ –ë–∏—Ä—é—Å–∞
        OrderItem(order_id=order4.id, product_id=products[7].id, quantity=1, price=products[7].price),  # –¢–µ–ª–µ–≤–∏–∑–æ—Ä LG
    ]
    
    order5 = Order(client_id=clients[4].id)
    session.add(order5)
    await session.flush()
    
    order5_items = [
        OrderItem(order_id=order5.id, product_id=products[9].id, quantity=1, price=products[9].price),   # –ù–æ—É—Ç–±—É–∫ HP 17"
        OrderItem(order_id=order5.id, product_id=products[11].id, quantity=1, price=products[11].price), # –ù–æ—É—Ç–±—É–∫ Lenovo 19"
        OrderItem(order_id=order5.id, product_id=products[13].id, quantity=1, price=products[13].price), # –ú–æ–Ω–æ–±–ª–æ–∫ HP
    ]
    
    all_order_items = order1_items + order2_items + order3_items + order4_items + order5_items
    session.add_all(all_order_items)
    
    await session.commit()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ:")
    print(f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len([household_appliances, computers, washing_machines, refrigerators, tvs, single_door, double_door, laptops, monoblocks, laptop_17, laptop_19])}")
    print(f"   - –¢–æ–≤–∞—Ä–æ–≤: {len(products)}")
    print(f"   - –ö–ª–∏–µ–Ω—Ç–æ–≤: {len(clients)}")
    print(f"   - –ó–∞–∫–∞–∑–æ–≤: 5")
    print(f"   - –ü–æ–∑–∏—Ü–∏–π –≤ –∑–∞–∫–∞–∑–∞—Ö: {len(all_order_items)}")
